# Alternative Network Policy using Calico GlobalNetworkPolicy (if Calico CNI is used)
# This file demonstrates how to restrict access to specific domains using Calico
# Note: This requires Calico CNI and is not standard Kubernetes NetworkPolicy

apiVersion: projectcalico.org/v3
kind: GlobalNetworkPolicy
metadata:
  name: external-api-domain-restriction
spec:
  selector: app == "external-api" && kubernetes.io/metadata.namespace == "external-ns"
  types:
  - Egress
  egress:
  # Allow DNS resolution
  - action: Allow
    protocol: UDP
    destination:
      ports: [53]
  - action: Allow
    protocol: TCP
    destination:
      ports: [53]
  # Allow access to google.ro domain
  - action: Allow
    protocol: TCP
    destination:
      ports: [80, 443]
      domains: ["google.ro", "*.google.ro"]
  # Deny all other egress
  - action: Deny

---
# Standard Kubernetes NetworkPolicy with IP-based restrictions
# This is a more practical approach using known Google Romania IP ranges
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: external-api-google-ro-ips
  namespace: external-ns
spec:
  podSelector:
    matchLabels:
      app: external-api
  policyTypes:
  - Egress
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  # Allow access to Google's public DNS (for resolution)
  - to:
    - ipBlock:
        cidr: 8.8.8.8/32
    - ipBlock:
        cidr: 8.8.4.4/32
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  # Allow HTTPS to common Google IP ranges (this is an approximation)
  # Note: Google uses many IP ranges, this is not exhaustive
  - to:
    - ipBlock:
        cidr: 172.217.0.0/16    # Google IP range
    - ipBlock:
        cidr: 216.58.192.0/19   # Google IP range
    - ipBlock:
        cidr: 74.125.0.0/16     # Google IP range
    ports:
    - protocol: TCP
      port: 80
    - protocol: TCP
      port: 443
